@model IntakeVM
@{
    var strFullName = Model != null ? Model.FullName : string.Empty;
    var strCreationDate = Model != null ? Model.CreationDate.ToString() : string.Empty;
}
<script>

    function whenChanging()
    {
        let idValue = $("#modelId").val();
        let urlAction = '';
        if (idValue == 0)
            urlAction = "@Url.Action("Create", "Intakes")"
        else
            urlAction = "@Url.Action("Update", "Intakes")"
        updateRecord(urlAction);
    }

    function updateRecord(url)
    {
        let LastName = $("#LastName").val();
        let FirstName = $("#FirstName").val();
        let CaseIntern = $("#InternId").val();
        let IUStudentId = $("#IUStudentId").val();
        let TypeId = $("#TypeId").val();
        let CaseId = $("#modelId").val();
        let AttorneysValues = $("#Attorneys").data("kendoMultiSelect").dataItems();
        let Attorneys = [];
        let Narrative = $("#NarrativeEditor").data("kendoEditor").value();

        for (let i = 0; i < AttorneysValues.length; i++)
        {
            Attorneys.push(AttorneysValues[i].AttorneyId);
        }

        $.post(url,
            {
                CaseId: CaseId,
                LastName: LastName,
                FirstName: FirstName,
                InternId: CaseIntern,
                IUStudentId: IUStudentId,
                TypeId: TypeId,
                AttorneyIds: Attorneys,
                Narrative: Narrative
            },
            function (data) {

                if (url.includes('Create'))
                    window.location.href = "/Intakes/Details/?id=" + data;
                else
                {
                    if (data) {
                        $("#modelId").val(data);
                        updateValues();
                    }
                }

            });

    }

    function updateValues()
    {
        $.get("@Url.Action("GetIntakeById", "Intakes")",
            {
                id: $("#modelId").val()
            },
            function (data) {
                //console.log(data);
                let lastName = data.LastName ? data.LastName : '';
                let firstName = data.FirstName ? data.FirstName : '';
                let fullName = (lastName && firstName) ? lastName + ', ' + firstName : lastName + ' ' + firstName;
                let creationDate = convertDate(data.CreationDate);
                let displayValue = creationDate.getMonth() + '/';
                displayValue += creationDate.getDate() + '/'
                displayValue += creationDate.getFullYear() + ' '
                displayValue += formatAMPM(creationDate)
                $("#fullName").text(fullName);
                $("#lblCreationDate").text(displayValue);
                //update the log
                $("#LogGrid").data("kendoGrid").dataSource.read();
        });
    }

    function convertDate(value) {
        let first = 0;
        let last = 0;
        first = value.indexOf('(') + 1;
        last = value.indexOf(')');
        return new Date(parseInt(value.substring(first, last)));
    }

    function formatAMPM(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var strTime = hours + ':' + minutes + ' ' + ampm;
        return strTime;
    }

    function showDialog() {
        $('#dialog').data("kendoDialog").open();
    }

    function closeDialog() {
        $('#dialog').data("kendoDialog").close();
    }

    function promoteToCase(e)
    {
        var caseNo = $('#caseNo').val();
        if (caseNo.trim() == '')
        {
            alert('The case number must have a value');
            e.preventDefault();
        }
        else {

            $.post('@Url.Action("PromoteToCase","Intakes")',
                {

                },
                function (data)
                {
                    $('#caseNo').val("");
                    alert('Intake Upgraded successfully!')
                }
            )
        }
    }


</script>


@(Html.Kendo().Dialog()
    .Name("dialog")
    .Title("Promote to Case")
    .Content("<p>Would you like to promote this intake into a <strong>CASE</strong> ?<p>" +
        "<input id='caseNo' required type='text' style='width:90%'  />")
    .Width(400)
    .Modal(true)
    .Closable(false)
    .Visible(false)
    .Actions(actions =>
    {
        actions.Add().Text("Cancel").Action("closeDialog");
        actions.Add().Text("Promote").Action("promoteToCase").Primary(true);
    })
)


<div style="padding:0; margin:0; height:100px">
    <div class="float-left padding-ten" style="width:33%;">
        <button type="submit" class="button">Enrollment Not Verified</button>
    </div>
    <div class="float-left padding-ten" style="width:33%;">
        <button type="submit" class="button">Student Activity Fee Not Verified</button>
    </div>
    <div class="float-left padding-ten" style="width:33%;">
        <div class="float-right">
            <button class="button" role="button" tabindex="0" onclick="showDialog()">Promote to case</button>
        </div>
    </div>
</div>
<div class="padding-ten">
    <h4 style="text-align:right" id="fullName">@strFullName</h4>
</div>
<div class="grid thirds">

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.LastName)
        </div>
        <div>
            @Html.TextBoxFor(model => model.LastName, new { onchange = "whenChanging()" })
        </div>
    </div>

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div>
            @Html.TextBoxFor(model => model.FirstName, new { onchange = "whenChanging()" })
        </div>
    </div>

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.InternId)
        </div>
        <div>
            @Html.EditorFor(model => model.InternId)
        </div>
    </div>

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.IUStudentId)
        </div>
        <div>
            @Html.TextBoxFor(model => model.IUStudentId, new { onchange = "whenChanging()" })
        </div>
    </div>

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.TypeId)
        </div>
        <div>
            @Html.EditorFor(model => model.TypeId)
        </div>
    </div>

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.CreationDate)
        </div>
        <div>
            <label id="lblCreationDate">@strCreationDate</label>
        </div>
    </div>

    <div class="grid-item">
        <div>
            @Html.LabelFor(model => model.Attorneys)
        </div>
        <div>
            @Html.EditorFor(model => model.Attorneys)
        </div>
    </div>

</div>


