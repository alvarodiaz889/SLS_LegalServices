@model IntakeVM
@{
    int intakeId = Model != null ? Model.CaseId : 0 ;
}

<script>
    function ContactsRequestEnd(e) {
        if (e.type == "update" || e.type == "create" || e.type == "destroy") {
            this.read();
            $("#LogGrid").data("kendoGrid").dataSource.read();
        }
    }
</script>
<h6>Telephone Number(s)</h6>
@(Html.Kendo().Grid<TelephoneVM>()
    .Name("TelephoneGrid")
    .Columns(columns =>
    {
        columns.Command(command => { command.Edit().Text(" ").CancelText(" ").UpdateText(" "); command.Destroy().Text(" "); }).Width(100);
        columns.Bound(c => c.TelephoneId).Visible(false);
        columns.Bound(c => c.Type);
        columns.Bound(c => c.Number);
        columns.Template(@<text> </text>).Title("");
    })
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(m => {
            m.Id(c => c.TelephoneId);
            m.Field(c => c.CaseId).DefaultValue(intakeId);
        })
        .Read(read => read.Action("Read", "Telephone", new { intakeId = intakeId }))
        .Destroy(destroy => destroy.Action("Destroy", "Telephone"))
        .Update(update => update.Action("Update", "Telephone"))
        .Create(create => create.Action("Create", "Telephone"))
        .Events(events => events.RequestEnd("ContactsRequestEnd"))
    )
    .ToolBar(toolbar => { toolbar.Create().Text("Add"); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .HtmlAttributes(new { @style = "height:auto;" })
)
<br/>
<h6>Email Address(es)</h6>
@(Html.Kendo().Grid<EmailVM>()
    .Name("EmailGrid")
    .Columns(columns =>
    {
        columns.Command(command => { command.Edit().Text(" ").CancelText(" ").UpdateText(" "); command.Destroy().Text(" "); }).Width(100);
        columns.Bound(c => c.EmailId).Visible(false);
        columns.Bound(c => c.Type);
        columns.Bound(c => c.Email1);
        columns.Template(@<text> </text>).Title("");
    })
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(m =>
        {
            m.Id(c => c.EmailId);
            m.Field(c => c.CaseId).DefaultValue(intakeId);
        })
        .Read(read => read.Action("Read", "Email", new { intakeId = intakeId }))
        .Destroy(destroy => destroy.Action("Destroy", "Email"))
        .Update(update => update.Action("Update", "Email"))
        .Create(create => create.Action("Create", "Email"))
        .Events(events => events.RequestEnd("ContactsRequestEnd"))
    )
    .ToolBar(toolbar => { toolbar.Create().Text("Add"); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
)
<br />
<h6>Address(es)</h6>
@(Html.Kendo().Grid<AddressVM>()
    .Name("AddressGrid")
    .Columns(columns =>
    {
        columns.Command(command => { command.Edit().Text(" ").CancelText("Cancel").UpdateText("Update"); command.Destroy().Text(" "); }).Width(100);
        columns.Bound(c => c.AddressId).Visible(false);
        columns.Bound(c => c.Type).Width(100);
        columns.Bound(c => c.FullAddress);
    })
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(m =>
        {
            m.Id(c => c.AddressId);
            m.Field(c => c.CaseId).DefaultValue(intakeId);
        })
        .Read(read => read.Action("Read", "Address", new { intakeId = intakeId }))
        .Destroy(destroy => destroy.Action("Destroy", "Address"))
        .Update(update => update.Action("Update", "Address"))
        .Create(create => create.Action("Create", "Address"))
        .Events(events => events.RequestEnd("ContactsRequestEnd"))
    )
    .ToolBar(toolbar => { toolbar.Create().Text("Add"); })
    .Editable(editable => editable.Mode(GridEditMode.PopUp)
            .TemplateName("EditAddress").Window(w => w.Title("Edit Address").Name("editWindow").Width(800))
            .AdditionalViewData(new { IsFromParty = false }))
)
