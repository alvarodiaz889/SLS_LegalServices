<script>
    function onRequestEnd(e) {
        if (e.type == "update" || e.type == "create" || e.type == "remove") {
            $("#AttorneyGrid").data("kendoGrid").dataSource.read();
        }
    }

    function OnAttorneyGridDetailExpand(e)
    {
        let id = e.detailRow.find('[data-role="grid"]').attr('id');
        $('#'+id).data("kendoGrid").dataSource.read();
    }

    function onSaveAttorney(e) {
        let userName = e.sender.dataItem(e.container).UserName.trim();
        let userId = e.sender.dataItem(e.container).UserId;
        let isValid = false;

        if (userName != '') {
            $.ajax({
                url: '@Url.Action("GetUserByUserName","User")',
                type: 'POST',
                async: false,
                cache: false,
                timeout: 10000,
                data: { userName: userName, userId: userId },
                error: function () {
                    return true;
                },
                success: function (data) {
                    if (data) {
                        isValid = true;
                    }
                    else {
                        alert("User Name already exists.");
                    }
                }
            });
        }
        else
        {
            alert("User Name must have a valid value.");
        }

        console.log(isValid);

        if (!isValid)
            e.preventDefault();
    }
</script>
@(Html.Kendo().Grid<AttorneyVM>()
          .Name("AttorneyGrid")
          .Columns(columns =>
          {
              columns.Command(command => { command.Edit().Text(" ").CancelText(" ").UpdateText(" "); command.Destroy().Text(" "); }).Width(100);
              columns.Bound(c => c.AttorneyId).Visible(false);
              columns.Bound(c => c.UserId).Visible(false);
              columns.Bound(c => c.UserName);
              columns.Bound(c => c.LastName);
              columns.Bound(c => c.FirstName);
              columns.Bound(c => c.DisplayName);
              columns.Bound(c => c.Active)
                .ClientTemplate("<span> #= Active ? value='Active': 'Inactive' # </span>")
                .EditorTemplateName("Active")
                .Width(150)
                .Title("Status");
              columns.Template(@<text> </text>).Title("");
          })
          .Scrollable()
          .DataSource(dataSource => dataSource
              .Ajax()
              .Model(m => {
                  m.Id(c => c.AttorneyId);
                  m.Field(c => c.UserId).DefaultValue(Guid.NewGuid());
              })
              .Read(read => read.Action("Read", "Attorneys"))
              .Destroy(destroy => destroy.Action("Destroy", "Attorneys"))
              .Update(update => update.Action("Update", "Attorneys"))
              .Create(create => create.Action("Create", "Attorneys"))
              .Events(events => events.RequestEnd("onRequestEnd"))
          )
          .ToolBar(toolbar => { toolbar.Create().Text("Add"); })
          .Editable(editable => editable.Mode(GridEditMode.InLine))
          .ClientDetailTemplateId("attorneyDetails")
          .Events(e => e.DetailExpand("OnAttorneyGridDetailExpand").Save("onSaveAttorney"))
)


<script id="attorneyDetails" type="text/kendo-tmpl">
    <div style="width:50%">
        @(Html.Kendo().Grid<IntakeVM>()
                .Name("AttorneyDetailsGrid_#=AttorneyId#")
                .Columns(columns =>
                {
                    columns.Bound(c => c.CaseId).ClientTemplate("<a href='/Cases/Details/?id=\\#=CaseId\\#' >Open</a>");
                    columns.Bound(c => c.CaseNo).Title("Case ID");
                    columns.Bound(c => c.CertifiedInternFullName).Title("Certified Intern");
                    columns.Bound(c => c.InternFullName).Title("Intern");
                })
                .Scrollable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(m =>
                    {
                        m.Id(c => c.CaseId);
                    })
                    .Read(r => r.Action("GetCasesByAttorneyId", "Cases", new { attorneyId = "#=AttorneyId#" }))
                    .Update(u => u.Action(" "," "))
                    .Destroy(d => d.Action(" ", " "))
                    .Create(c => c.Action(" ", " "))
                )
                .ToClientTemplate()
        )
    </div>
</script>
